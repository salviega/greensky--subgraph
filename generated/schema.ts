// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class DataNvdiRegistered extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save DataNvdiRegistered entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        `Entities of type DataNvdiRegistered must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`
      );
      store.set("DataNvdiRegistered", id.toString(), this);
    }
  }

  static load(id: string): DataNvdiRegistered | null {
    return changetype<DataNvdiRegistered | null>(
      store.get("DataNvdiRegistered", id)
    );
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get requestId(): BigInt {
    let value = this.get("requestId");
    return value!.toBigInt();
  }

  set requestId(value: BigInt) {
    this.set("requestId", Value.fromBigInt(value));
  }

  get mean(): string {
    let value = this.get("mean");
    return value!.toString();
  }

  set mean(value: string) {
    this.set("mean", Value.fromString(value));
  }

  get std(): string {
    let value = this.get("std");
    return value!.toString();
  }

  set std(value: string) {
    this.set("std", Value.fromString(value));
  }

  get max(): string {
    let value = this.get("max");
    return value!.toString();
  }

  set max(value: string) {
    this.set("max", Value.fromString(value));
  }

  get min(): string {
    let value = this.get("min");
    return value!.toString();
  }

  set min(value: string) {
    this.set("min", Value.fromString(value));
  }

  get uuid(): string {
    let value = this.get("uuid");
    return value!.toString();
  }

  set uuid(value: string) {
    this.set("uuid", Value.fromString(value));
  }

  get parkName(): string {
    let value = this.get("parkName");
    return value!.toString();
  }

  set parkName(value: string) {
    this.set("parkName", Value.fromString(value));
  }
}
